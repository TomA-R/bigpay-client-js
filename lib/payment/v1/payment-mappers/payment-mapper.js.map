{"version":3,"sources":["../../../../src/payment/v1/payment-mappers/payment-mapper.js"],"names":["PaymentMapper","paymentMethodIdMapper","PaymentMethodIdMapper","create","data","order","orderMeta","payment","paymentMethod","payload","device_info","deviceSessionId","device","deviceFingerprint","fingerprint_id","gateway","mapToId","notify_url","callbackUrl","return_url","returnUrl","vault_payment_instrument","instrumentId","shouldSaveInstrument","method","nonce","formattedPayload","bigpay_token","mapToBigPayToken","credit_card_token","token","cryptogramId","credit_card_cryptogram","mapToCryptogram","credit_card","mapToCreditCard","account_name","ccName","month","ccExpiry","number","ccNumber","verification_value","ccCvv","year","customer_code","ccCustomerCode","three_d_secure","threeDSecure","credit_card_number_confirmation","payment_cryptogram","eci","xid","transactionId","account_mask","accountMask"],"mappings":"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","sourcesContent":["import objectAssign from 'object-assign';\nimport PaymentMethodIdMapper from '../../payment-method-mappers/payment-method-id-mapper';\nimport { omitNil, toNumber } from '../../../common/utils';\n\nexport default class PaymentMapper {\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {PaymentMapper}\n     */\n    static create() {\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n\n        return new PaymentMapper(paymentMethodIdMapper);\n    }\n\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {void}\n     */\n    constructor(paymentMethodIdMapper) {\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayment(data) {\n        const {\n            order = {},\n            orderMeta = {},\n            payment = {},\n            paymentMethod = {},\n        } = data;\n\n        const payload = {\n            device_info: payment.deviceSessionId ? payment.deviceSessionId : null,\n            device: orderMeta.deviceFingerprint ? { fingerprint_id: orderMeta.deviceFingerprint } : null,\n            gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),\n            notify_url: order.callbackUrl,\n            return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),\n            vault_payment_instrument: !payment.instrumentId ? payment.shouldSaveInstrument : null,\n        };\n\n        const { method } = paymentMethod;\n\n        if (method) {\n            objectAssign(payload, { method });\n        }\n\n        const nonce = payment.nonce || paymentMethod.nonce;\n\n        if (payment.formattedPayload) {\n            objectAssign(payload, payment.formattedPayload);\n        } else if (payment.instrumentId) {\n            objectAssign(payload, {\n                bigpay_token: this.mapToBigPayToken(data),\n            });\n        } else if (nonce) {\n            objectAssign(payload, {\n                credit_card_token: {\n                    token: nonce,\n                },\n            });\n        } else if (payment.cryptogramId) {\n            objectAssign(payload, {\n                credit_card_cryptogram: this.mapToCryptogram(data),\n            });\n        } else {\n            objectAssign(payload, {\n                credit_card: this.mapToCreditCard(data),\n            });\n        }\n\n        return omitNil(payload);\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCreditCard(data) {\n        const { payment = {} } = data;\n\n        return omitNil({\n            account_name: payment.ccName,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            verification_value: payment.ccCvv,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            customer_code: payment.ccCustomerCode,\n            three_d_secure: payment.threeDSecure,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToBigPayToken({ payment }) {\n        return omitNil({\n            credit_card_number_confirmation: payment.ccNumber,\n            token: payment.instrumentId,\n            verification_value: payment.ccCvv,\n            three_d_secure: payment.threeDSecure,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToCryptogram({ payment }) {\n        return omitNil({\n            payment_cryptogram: payment.cryptogramId,\n            eci: payment.eci,\n            xid: payment.transactionId,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            account_mask: payment.accountMask,\n        });\n    }\n}\n"],"file":"payment-mapper.js"}